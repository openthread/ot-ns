// Copyright (c) 2020-2024, The OTNS Authors.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the copyright holder nor the
//    names of its contributors may be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: visualize_grpc.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OtDeviceRole int32

const (
	OtDeviceRole_OT_DEVICE_ROLE_DISABLED OtDeviceRole = 0 ///< The Thread stack is disabled.
	OtDeviceRole_OT_DEVICE_ROLE_DETACHED OtDeviceRole = 1 ///< Not currently participating in a Thread network/partition.
	OtDeviceRole_OT_DEVICE_ROLE_CHILD    OtDeviceRole = 2 ///< The Thread Child role.
	OtDeviceRole_OT_DEVICE_ROLE_ROUTER   OtDeviceRole = 3 ///< The Thread Router role.
	OtDeviceRole_OT_DEVICE_ROLE_LEADER   OtDeviceRole = 4 ///< The Thread Leader role.
)

// Enum value maps for OtDeviceRole.
var (
	OtDeviceRole_name = map[int32]string{
		0: "OT_DEVICE_ROLE_DISABLED",
		1: "OT_DEVICE_ROLE_DETACHED",
		2: "OT_DEVICE_ROLE_CHILD",
		3: "OT_DEVICE_ROLE_ROUTER",
		4: "OT_DEVICE_ROLE_LEADER",
	}
	OtDeviceRole_value = map[string]int32{
		"OT_DEVICE_ROLE_DISABLED": 0,
		"OT_DEVICE_ROLE_DETACHED": 1,
		"OT_DEVICE_ROLE_CHILD":    2,
		"OT_DEVICE_ROLE_ROUTER":   3,
		"OT_DEVICE_ROLE_LEADER":   4,
	}
)

func (x OtDeviceRole) Enum() *OtDeviceRole {
	p := new(OtDeviceRole)
	*p = x
	return p
}

func (x OtDeviceRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OtDeviceRole) Descriptor() protoreflect.EnumDescriptor {
	return file_visualize_grpc_proto_enumTypes[0].Descriptor()
}

func (OtDeviceRole) Type() protoreflect.EnumType {
	return &file_visualize_grpc_proto_enumTypes[0]
}

func (x OtDeviceRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OtDeviceRole.Descriptor instead.
func (OtDeviceRole) EnumDescriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{0}
}

type VisualizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VisualizeRequest) Reset() {
	*x = VisualizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizeRequest) ProtoMessage() {}

func (x *VisualizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizeRequest.ProtoReflect.Descriptor instead.
func (*VisualizeRequest) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{0}
}

type EnergyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnergyRequest) Reset() {
	*x = EnergyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyRequest) ProtoMessage() {}

func (x *EnergyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyRequest.ProtoReflect.Descriptor instead.
func (*EnergyRequest) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{1}
}

type NodeStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeStatsRequest) Reset() {
	*x = NodeStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatsRequest) ProtoMessage() {}

func (x *NodeStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatsRequest.ProtoReflect.Descriptor instead.
func (*NodeStatsRequest) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{2}
}

type VisualizeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*VisualizeEvent_AddNode
	//	*VisualizeEvent_DeleteNode
	//	*VisualizeEvent_SetNodeRloc16
	//	*VisualizeEvent_SetNodeRole
	//	*VisualizeEvent_SetNodePos
	//	*VisualizeEvent_SetNodePartitionId
	//	*VisualizeEvent_OnNodeFail
	//	*VisualizeEvent_OnNodeRecover
	//	*VisualizeEvent_SetParent
	//	*VisualizeEvent_CountDown
	//	*VisualizeEvent_ShowDemoLegend
	//	*VisualizeEvent_AdvanceTime
	//	*VisualizeEvent_AddRouterTable
	//	*VisualizeEvent_RemoveRouterTable
	//	*VisualizeEvent_AddChildTable
	//	*VisualizeEvent_RemoveChildTable
	//	*VisualizeEvent_Send
	//	*VisualizeEvent_SetSpeed
	//	*VisualizeEvent_Heartbeat
	//	*VisualizeEvent_OnExtAddrChange
	//	*VisualizeEvent_SetTitle
	//	*VisualizeEvent_SetNodeMode
	//	*VisualizeEvent_SetNetworkInfo
	//	*VisualizeEvent_NodeStatsInfo
	Type isVisualizeEvent_Type `protobuf_oneof:"type"`
}

func (x *VisualizeEvent) Reset() {
	*x = VisualizeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisualizeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisualizeEvent) ProtoMessage() {}

func (x *VisualizeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisualizeEvent.ProtoReflect.Descriptor instead.
func (*VisualizeEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{3}
}

func (m *VisualizeEvent) GetType() isVisualizeEvent_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *VisualizeEvent) GetAddNode() *AddNodeEvent {
	if x, ok := x.GetType().(*VisualizeEvent_AddNode); ok {
		return x.AddNode
	}
	return nil
}

func (x *VisualizeEvent) GetDeleteNode() *DeleteNodeEvent {
	if x, ok := x.GetType().(*VisualizeEvent_DeleteNode); ok {
		return x.DeleteNode
	}
	return nil
}

func (x *VisualizeEvent) GetSetNodeRloc16() *SetNodeRloc16Event {
	if x, ok := x.GetType().(*VisualizeEvent_SetNodeRloc16); ok {
		return x.SetNodeRloc16
	}
	return nil
}

func (x *VisualizeEvent) GetSetNodeRole() *SetNodeRoleEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetNodeRole); ok {
		return x.SetNodeRole
	}
	return nil
}

func (x *VisualizeEvent) GetSetNodePos() *SetNodePosEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetNodePos); ok {
		return x.SetNodePos
	}
	return nil
}

func (x *VisualizeEvent) GetSetNodePartitionId() *SetNodePartitionIdEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetNodePartitionId); ok {
		return x.SetNodePartitionId
	}
	return nil
}

func (x *VisualizeEvent) GetOnNodeFail() *OnNodeFailEvent {
	if x, ok := x.GetType().(*VisualizeEvent_OnNodeFail); ok {
		return x.OnNodeFail
	}
	return nil
}

func (x *VisualizeEvent) GetOnNodeRecover() *OnNodeRecoverEvent {
	if x, ok := x.GetType().(*VisualizeEvent_OnNodeRecover); ok {
		return x.OnNodeRecover
	}
	return nil
}

func (x *VisualizeEvent) GetSetParent() *SetParentEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetParent); ok {
		return x.SetParent
	}
	return nil
}

func (x *VisualizeEvent) GetCountDown() *CountDownEvent {
	if x, ok := x.GetType().(*VisualizeEvent_CountDown); ok {
		return x.CountDown
	}
	return nil
}

func (x *VisualizeEvent) GetShowDemoLegend() *ShowDemoLegendEvent {
	if x, ok := x.GetType().(*VisualizeEvent_ShowDemoLegend); ok {
		return x.ShowDemoLegend
	}
	return nil
}

func (x *VisualizeEvent) GetAdvanceTime() *AdvanceTimeEvent {
	if x, ok := x.GetType().(*VisualizeEvent_AdvanceTime); ok {
		return x.AdvanceTime
	}
	return nil
}

func (x *VisualizeEvent) GetAddRouterTable() *AddRouterTableEvent {
	if x, ok := x.GetType().(*VisualizeEvent_AddRouterTable); ok {
		return x.AddRouterTable
	}
	return nil
}

func (x *VisualizeEvent) GetRemoveRouterTable() *RemoveRouterTableEvent {
	if x, ok := x.GetType().(*VisualizeEvent_RemoveRouterTable); ok {
		return x.RemoveRouterTable
	}
	return nil
}

func (x *VisualizeEvent) GetAddChildTable() *AddChildTableEvent {
	if x, ok := x.GetType().(*VisualizeEvent_AddChildTable); ok {
		return x.AddChildTable
	}
	return nil
}

func (x *VisualizeEvent) GetRemoveChildTable() *RemoveChildTableEvent {
	if x, ok := x.GetType().(*VisualizeEvent_RemoveChildTable); ok {
		return x.RemoveChildTable
	}
	return nil
}

func (x *VisualizeEvent) GetSend() *SendEvent {
	if x, ok := x.GetType().(*VisualizeEvent_Send); ok {
		return x.Send
	}
	return nil
}

func (x *VisualizeEvent) GetSetSpeed() *SetSpeedEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetSpeed); ok {
		return x.SetSpeed
	}
	return nil
}

func (x *VisualizeEvent) GetHeartbeat() *HeartbeatEvent {
	if x, ok := x.GetType().(*VisualizeEvent_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (x *VisualizeEvent) GetOnExtAddrChange() *OnExtAddrChangeEvent {
	if x, ok := x.GetType().(*VisualizeEvent_OnExtAddrChange); ok {
		return x.OnExtAddrChange
	}
	return nil
}

func (x *VisualizeEvent) GetSetTitle() *SetTitleEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetTitle); ok {
		return x.SetTitle
	}
	return nil
}

func (x *VisualizeEvent) GetSetNodeMode() *SetNodeModeEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetNodeMode); ok {
		return x.SetNodeMode
	}
	return nil
}

func (x *VisualizeEvent) GetSetNetworkInfo() *SetNetworkInfoEvent {
	if x, ok := x.GetType().(*VisualizeEvent_SetNetworkInfo); ok {
		return x.SetNetworkInfo
	}
	return nil
}

func (x *VisualizeEvent) GetNodeStatsInfo() *NodeStatsInfoEvent {
	if x, ok := x.GetType().(*VisualizeEvent_NodeStatsInfo); ok {
		return x.NodeStatsInfo
	}
	return nil
}

type isVisualizeEvent_Type interface {
	isVisualizeEvent_Type()
}

type VisualizeEvent_AddNode struct {
	AddNode *AddNodeEvent `protobuf:"bytes,1,opt,name=add_node,json=addNode,proto3,oneof"`
}

type VisualizeEvent_DeleteNode struct {
	DeleteNode *DeleteNodeEvent `protobuf:"bytes,2,opt,name=delete_node,json=deleteNode,proto3,oneof"`
}

type VisualizeEvent_SetNodeRloc16 struct {
	SetNodeRloc16 *SetNodeRloc16Event `protobuf:"bytes,3,opt,name=set_node_rloc16,json=setNodeRloc16,proto3,oneof"`
}

type VisualizeEvent_SetNodeRole struct {
	SetNodeRole *SetNodeRoleEvent `protobuf:"bytes,4,opt,name=set_node_role,json=setNodeRole,proto3,oneof"`
}

type VisualizeEvent_SetNodePos struct {
	SetNodePos *SetNodePosEvent `protobuf:"bytes,5,opt,name=set_node_pos,json=setNodePos,proto3,oneof"`
}

type VisualizeEvent_SetNodePartitionId struct {
	SetNodePartitionId *SetNodePartitionIdEvent `protobuf:"bytes,6,opt,name=set_node_partition_id,json=setNodePartitionId,proto3,oneof"`
}

type VisualizeEvent_OnNodeFail struct {
	OnNodeFail *OnNodeFailEvent `protobuf:"bytes,7,opt,name=on_node_fail,json=onNodeFail,proto3,oneof"`
}

type VisualizeEvent_OnNodeRecover struct {
	OnNodeRecover *OnNodeRecoverEvent `protobuf:"bytes,8,opt,name=on_node_recover,json=onNodeRecover,proto3,oneof"`
}

type VisualizeEvent_SetParent struct {
	SetParent *SetParentEvent `protobuf:"bytes,9,opt,name=set_parent,json=setParent,proto3,oneof"`
}

type VisualizeEvent_CountDown struct {
	CountDown *CountDownEvent `protobuf:"bytes,10,opt,name=count_down,json=countDown,proto3,oneof"`
}

type VisualizeEvent_ShowDemoLegend struct {
	ShowDemoLegend *ShowDemoLegendEvent `protobuf:"bytes,11,opt,name=show_demo_legend,json=showDemoLegend,proto3,oneof"`
}

type VisualizeEvent_AdvanceTime struct {
	AdvanceTime *AdvanceTimeEvent `protobuf:"bytes,12,opt,name=advance_time,json=advanceTime,proto3,oneof"`
}

type VisualizeEvent_AddRouterTable struct {
	AddRouterTable *AddRouterTableEvent `protobuf:"bytes,13,opt,name=add_router_table,json=addRouterTable,proto3,oneof"`
}

type VisualizeEvent_RemoveRouterTable struct {
	RemoveRouterTable *RemoveRouterTableEvent `protobuf:"bytes,14,opt,name=remove_router_table,json=removeRouterTable,proto3,oneof"`
}

type VisualizeEvent_AddChildTable struct {
	AddChildTable *AddChildTableEvent `protobuf:"bytes,15,opt,name=add_child_table,json=addChildTable,proto3,oneof"`
}

type VisualizeEvent_RemoveChildTable struct {
	RemoveChildTable *RemoveChildTableEvent `protobuf:"bytes,16,opt,name=remove_child_table,json=removeChildTable,proto3,oneof"`
}

type VisualizeEvent_Send struct {
	Send *SendEvent `protobuf:"bytes,17,opt,name=send,proto3,oneof"`
}

type VisualizeEvent_SetSpeed struct {
	SetSpeed *SetSpeedEvent `protobuf:"bytes,18,opt,name=set_speed,json=setSpeed,proto3,oneof"`
}

type VisualizeEvent_Heartbeat struct {
	Heartbeat *HeartbeatEvent `protobuf:"bytes,19,opt,name=heartbeat,proto3,oneof"`
}

type VisualizeEvent_OnExtAddrChange struct {
	OnExtAddrChange *OnExtAddrChangeEvent `protobuf:"bytes,20,opt,name=on_ext_addr_change,json=onExtAddrChange,proto3,oneof"`
}

type VisualizeEvent_SetTitle struct {
	SetTitle *SetTitleEvent `protobuf:"bytes,21,opt,name=set_title,json=setTitle,proto3,oneof"`
}

type VisualizeEvent_SetNodeMode struct {
	SetNodeMode *SetNodeModeEvent `protobuf:"bytes,22,opt,name=set_node_mode,json=setNodeMode,proto3,oneof"`
}

type VisualizeEvent_SetNetworkInfo struct {
	SetNetworkInfo *SetNetworkInfoEvent `protobuf:"bytes,23,opt,name=set_network_info,json=setNetworkInfo,proto3,oneof"`
}

type VisualizeEvent_NodeStatsInfo struct {
	NodeStatsInfo *NodeStatsInfoEvent `protobuf:"bytes,24,opt,name=node_stats_info,json=nodeStatsInfo,proto3,oneof"`
}

func (*VisualizeEvent_AddNode) isVisualizeEvent_Type() {}

func (*VisualizeEvent_DeleteNode) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetNodeRloc16) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetNodeRole) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetNodePos) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetNodePartitionId) isVisualizeEvent_Type() {}

func (*VisualizeEvent_OnNodeFail) isVisualizeEvent_Type() {}

func (*VisualizeEvent_OnNodeRecover) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetParent) isVisualizeEvent_Type() {}

func (*VisualizeEvent_CountDown) isVisualizeEvent_Type() {}

func (*VisualizeEvent_ShowDemoLegend) isVisualizeEvent_Type() {}

func (*VisualizeEvent_AdvanceTime) isVisualizeEvent_Type() {}

func (*VisualizeEvent_AddRouterTable) isVisualizeEvent_Type() {}

func (*VisualizeEvent_RemoveRouterTable) isVisualizeEvent_Type() {}

func (*VisualizeEvent_AddChildTable) isVisualizeEvent_Type() {}

func (*VisualizeEvent_RemoveChildTable) isVisualizeEvent_Type() {}

func (*VisualizeEvent_Send) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetSpeed) isVisualizeEvent_Type() {}

func (*VisualizeEvent_Heartbeat) isVisualizeEvent_Type() {}

func (*VisualizeEvent_OnExtAddrChange) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetTitle) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetNodeMode) isVisualizeEvent_Type() {}

func (*VisualizeEvent_SetNetworkInfo) isVisualizeEvent_Type() {}

func (*VisualizeEvent_NodeStatsInfo) isVisualizeEvent_Type() {}

type SendEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcId  int32             `protobuf:"varint,1,opt,name=src_id,json=srcId,proto3" json:"src_id,omitempty"`
	DstId  int32             `protobuf:"varint,2,opt,name=dst_id,json=dstId,proto3" json:"dst_id,omitempty"`
	MvInfo *MsgVisualizeInfo `protobuf:"bytes,3,opt,name=mv_info,json=mvInfo,proto3" json:"mv_info,omitempty"`
}

func (x *SendEvent) Reset() {
	*x = SendEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEvent) ProtoMessage() {}

func (x *SendEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEvent.ProtoReflect.Descriptor instead.
func (*SendEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *SendEvent) GetSrcId() int32 {
	if x != nil {
		return x.SrcId
	}
	return 0
}

func (x *SendEvent) GetDstId() int32 {
	if x != nil {
		return x.DstId
	}
	return 0
}

func (x *SendEvent) GetMvInfo() *MsgVisualizeInfo {
	if x != nil {
		return x.MvInfo
	}
	return nil
}

type MsgVisualizeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel         uint32 `protobuf:"varint,1,opt,name=channel,proto3" json:"channel,omitempty"`
	FrameControl    uint32 `protobuf:"varint,2,opt,name=frame_control,json=frameControl,proto3" json:"frame_control,omitempty"`
	Seq             uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	DstAddrShort    uint32 `protobuf:"varint,4,opt,name=dst_addr_short,json=dstAddrShort,proto3" json:"dst_addr_short,omitempty"`
	DstAddrExtended uint64 `protobuf:"varint,5,opt,name=dst_addr_extended,json=dstAddrExtended,proto3" json:"dst_addr_extended,omitempty"`
	SendDurationUs  uint32 `protobuf:"varint,6,opt,name=send_duration_us,json=sendDurationUs,proto3" json:"send_duration_us,omitempty"`
	VisTrueDuration bool   `protobuf:"varint,7,opt,name=vis_true_duration,json=visTrueDuration,proto3" json:"vis_true_duration,omitempty"`
	PowerDbm        int32  `protobuf:"varint,8,opt,name=power_dbm,json=powerDbm,proto3" json:"power_dbm,omitempty"`
	FrameSizeBytes  uint32 `protobuf:"varint,9,opt,name=frame_size_bytes,json=frameSizeBytes,proto3" json:"frame_size_bytes,omitempty"`
}

func (x *MsgVisualizeInfo) Reset() {
	*x = MsgVisualizeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgVisualizeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgVisualizeInfo) ProtoMessage() {}

func (x *MsgVisualizeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgVisualizeInfo.ProtoReflect.Descriptor instead.
func (*MsgVisualizeInfo) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *MsgVisualizeInfo) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *MsgVisualizeInfo) GetFrameControl() uint32 {
	if x != nil {
		return x.FrameControl
	}
	return 0
}

func (x *MsgVisualizeInfo) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MsgVisualizeInfo) GetDstAddrShort() uint32 {
	if x != nil {
		return x.DstAddrShort
	}
	return 0
}

func (x *MsgVisualizeInfo) GetDstAddrExtended() uint64 {
	if x != nil {
		return x.DstAddrExtended
	}
	return 0
}

func (x *MsgVisualizeInfo) GetSendDurationUs() uint32 {
	if x != nil {
		return x.SendDurationUs
	}
	return 0
}

func (x *MsgVisualizeInfo) GetVisTrueDuration() bool {
	if x != nil {
		return x.VisTrueDuration
	}
	return false
}

func (x *MsgVisualizeInfo) GetPowerDbm() int32 {
	if x != nil {
		return x.PowerDbm
	}
	return 0
}

func (x *MsgVisualizeInfo) GetFrameSizeBytes() uint32 {
	if x != nil {
		return x.FrameSizeBytes
	}
	return 0
}

type AddRouterTableEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ExtAddr uint64 `protobuf:"varint,2,opt,name=ext_addr,json=extAddr,proto3" json:"ext_addr,omitempty"`
}

func (x *AddRouterTableEvent) Reset() {
	*x = AddRouterTableEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRouterTableEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouterTableEvent) ProtoMessage() {}

func (x *AddRouterTableEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouterTableEvent.ProtoReflect.Descriptor instead.
func (*AddRouterTableEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *AddRouterTableEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *AddRouterTableEvent) GetExtAddr() uint64 {
	if x != nil {
		return x.ExtAddr
	}
	return 0
}

type RemoveRouterTableEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ExtAddr uint64 `protobuf:"varint,2,opt,name=ext_addr,json=extAddr,proto3" json:"ext_addr,omitempty"`
}

func (x *RemoveRouterTableEvent) Reset() {
	*x = RemoveRouterTableEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRouterTableEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRouterTableEvent) ProtoMessage() {}

func (x *RemoveRouterTableEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRouterTableEvent.ProtoReflect.Descriptor instead.
func (*RemoveRouterTableEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveRouterTableEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *RemoveRouterTableEvent) GetExtAddr() uint64 {
	if x != nil {
		return x.ExtAddr
	}
	return 0
}

type AddChildTableEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ExtAddr uint64 `protobuf:"varint,2,opt,name=ext_addr,json=extAddr,proto3" json:"ext_addr,omitempty"`
}

func (x *AddChildTableEvent) Reset() {
	*x = AddChildTableEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChildTableEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChildTableEvent) ProtoMessage() {}

func (x *AddChildTableEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChildTableEvent.ProtoReflect.Descriptor instead.
func (*AddChildTableEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *AddChildTableEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *AddChildTableEvent) GetExtAddr() uint64 {
	if x != nil {
		return x.ExtAddr
	}
	return 0
}

type RemoveChildTableEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ExtAddr uint64 `protobuf:"varint,2,opt,name=ext_addr,json=extAddr,proto3" json:"ext_addr,omitempty"`
}

func (x *RemoveChildTableEvent) Reset() {
	*x = RemoveChildTableEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChildTableEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChildTableEvent) ProtoMessage() {}

func (x *RemoveChildTableEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChildTableEvent.ProtoReflect.Descriptor instead.
func (*RemoveChildTableEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveChildTableEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *RemoveChildTableEvent) GetExtAddr() uint64 {
	if x != nil {
		return x.ExtAddr
	}
	return 0
}

type SetSpeedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed float64 `protobuf:"fixed64,1,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *SetSpeedEvent) Reset() {
	*x = SetSpeedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpeedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpeedEvent) ProtoMessage() {}

func (x *SetSpeedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpeedEvent.ProtoReflect.Descriptor instead.
func (*SetSpeedEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *SetSpeedEvent) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type HeartbeatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatEvent) Reset() {
	*x = HeartbeatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatEvent) ProtoMessage() {}

func (x *HeartbeatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatEvent.ProtoReflect.Descriptor instead.
func (*HeartbeatEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{11}
}

type AdvanceTimeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Speed     float64 `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *AdvanceTimeEvent) Reset() {
	*x = AdvanceTimeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvanceTimeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvanceTimeEvent) ProtoMessage() {}

func (x *AdvanceTimeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvanceTimeEvent.ProtoReflect.Descriptor instead.
func (*AdvanceTimeEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *AdvanceTimeEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AdvanceTimeEvent) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type SetParentEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ExtAddr uint64 `protobuf:"varint,2,opt,name=ext_addr,json=extAddr,proto3" json:"ext_addr,omitempty"`
}

func (x *SetParentEvent) Reset() {
	*x = SetParentEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetParentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParentEvent) ProtoMessage() {}

func (x *SetParentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParentEvent.ProtoReflect.Descriptor instead.
func (*SetParentEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *SetParentEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetParentEvent) GetExtAddr() uint64 {
	if x != nil {
		return x.ExtAddr
	}
	return 0
}

type CountDownEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DurationMs int64  `protobuf:"varint,1,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CountDownEvent) Reset() {
	*x = CountDownEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDownEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDownEvent) ProtoMessage() {}

func (x *CountDownEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDownEvent.ProtoReflect.Descriptor instead.
func (*CountDownEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *CountDownEvent) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *CountDownEvent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ShowDemoLegendEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X     int32  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y     int32  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ShowDemoLegendEvent) Reset() {
	*x = ShowDemoLegendEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowDemoLegendEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDemoLegendEvent) ProtoMessage() {}

func (x *ShowDemoLegendEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDemoLegendEvent.ProtoReflect.Descriptor instead.
func (*ShowDemoLegendEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *ShowDemoLegendEvent) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ShowDemoLegendEvent) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ShowDemoLegendEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type SetNodePosEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	X      int32 `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32 `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Z      int32 `protobuf:"varint,4,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *SetNodePosEvent) Reset() {
	*x = SetNodePosEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNodePosEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodePosEvent) ProtoMessage() {}

func (x *SetNodePosEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodePosEvent.ProtoReflect.Descriptor instead.
func (*SetNodePosEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *SetNodePosEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetNodePosEvent) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SetNodePosEvent) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SetNodePosEvent) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type SetNodeRoleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32        `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Role   OtDeviceRole `protobuf:"varint,2,opt,name=role,proto3,enum=visualize_grpc_pb.OtDeviceRole" json:"role,omitempty"`
}

func (x *SetNodeRoleEvent) Reset() {
	*x = SetNodeRoleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNodeRoleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodeRoleEvent) ProtoMessage() {}

func (x *SetNodeRoleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodeRoleEvent.ProtoReflect.Descriptor instead.
func (*SetNodeRoleEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *SetNodeRoleEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetNodeRoleEvent) GetRole() OtDeviceRole {
	if x != nil {
		return x.Role
	}
	return OtDeviceRole_OT_DEVICE_ROLE_DISABLED
}

type SetNodePartitionIdEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PartitionId uint32 `protobuf:"varint,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
}

func (x *SetNodePartitionIdEvent) Reset() {
	*x = SetNodePartitionIdEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNodePartitionIdEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodePartitionIdEvent) ProtoMessage() {}

func (x *SetNodePartitionIdEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodePartitionIdEvent.ProtoReflect.Descriptor instead.
func (*SetNodePartitionIdEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *SetNodePartitionIdEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetNodePartitionIdEvent) GetPartitionId() uint32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

type OnNodeFailEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *OnNodeFailEvent) Reset() {
	*x = OnNodeFailEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnNodeFailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnNodeFailEvent) ProtoMessage() {}

func (x *OnNodeFailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnNodeFailEvent.ProtoReflect.Descriptor instead.
func (*OnNodeFailEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *OnNodeFailEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type OnNodeRecoverEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *OnNodeRecoverEvent) Reset() {
	*x = OnNodeRecoverEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnNodeRecoverEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnNodeRecoverEvent) ProtoMessage() {}

func (x *OnNodeRecoverEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnNodeRecoverEvent.ProtoReflect.Descriptor instead.
func (*OnNodeRecoverEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *OnNodeRecoverEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type DeleteNodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *DeleteNodeEvent) Reset() {
	*x = DeleteNodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeEvent) ProtoMessage() {}

func (x *DeleteNodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeEvent.ProtoReflect.Descriptor instead.
func (*DeleteNodeEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteNodeEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type AddNodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId     int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	X          int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y          int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Z          int32  `protobuf:"varint,4,opt,name=z,proto3" json:"z,omitempty"`
	RadioRange int32  `protobuf:"varint,5,opt,name=radio_range,json=radioRange,proto3" json:"radio_range,omitempty"`
	NodeType   string `protobuf:"bytes,6,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
}

func (x *AddNodeEvent) Reset() {
	*x = AddNodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeEvent) ProtoMessage() {}

func (x *AddNodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeEvent.ProtoReflect.Descriptor instead.
func (*AddNodeEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{22}
}

func (x *AddNodeEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *AddNodeEvent) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *AddNodeEvent) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *AddNodeEvent) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *AddNodeEvent) GetRadioRange() int32 {
	if x != nil {
		return x.RadioRange
	}
	return 0
}

func (x *AddNodeEvent) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

type NodeMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RxOnWhenIdle       bool `protobuf:"varint,1,opt,name=rx_on_when_idle,json=rxOnWhenIdle,proto3" json:"rx_on_when_idle,omitempty"`
	SecureDataRequests bool `protobuf:"varint,2,opt,name=secure_data_requests,json=secureDataRequests,proto3" json:"secure_data_requests,omitempty"`
	FullThreadDevice   bool `protobuf:"varint,3,opt,name=full_thread_device,json=fullThreadDevice,proto3" json:"full_thread_device,omitempty"`
	FullNetworkData    bool `protobuf:"varint,4,opt,name=full_network_data,json=fullNetworkData,proto3" json:"full_network_data,omitempty"`
}

func (x *NodeMode) Reset() {
	*x = NodeMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMode) ProtoMessage() {}

func (x *NodeMode) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMode.ProtoReflect.Descriptor instead.
func (*NodeMode) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *NodeMode) GetRxOnWhenIdle() bool {
	if x != nil {
		return x.RxOnWhenIdle
	}
	return false
}

func (x *NodeMode) GetSecureDataRequests() bool {
	if x != nil {
		return x.SecureDataRequests
	}
	return false
}

func (x *NodeMode) GetFullThreadDevice() bool {
	if x != nil {
		return x.FullThreadDevice
	}
	return false
}

func (x *NodeMode) GetFullNetworkData() bool {
	if x != nil {
		return x.FullNetworkData
	}
	return false
}

type SetNodeRloc16Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Rloc16 uint32 `protobuf:"varint,2,opt,name=rloc16,proto3" json:"rloc16,omitempty"`
}

func (x *SetNodeRloc16Event) Reset() {
	*x = SetNodeRloc16Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNodeRloc16Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodeRloc16Event) ProtoMessage() {}

func (x *SetNodeRloc16Event) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodeRloc16Event.ProtoReflect.Descriptor instead.
func (*SetNodeRloc16Event) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *SetNodeRloc16Event) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetNodeRloc16Event) GetRloc16() uint32 {
	if x != nil {
		return x.Rloc16
	}
	return 0
}

type OnExtAddrChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId  int32  `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ExtAddr uint64 `protobuf:"varint,2,opt,name=ext_addr,json=extAddr,proto3" json:"ext_addr,omitempty"`
}

func (x *OnExtAddrChangeEvent) Reset() {
	*x = OnExtAddrChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnExtAddrChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnExtAddrChangeEvent) ProtoMessage() {}

func (x *OnExtAddrChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnExtAddrChangeEvent.ProtoReflect.Descriptor instead.
func (*OnExtAddrChangeEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{25}
}

func (x *OnExtAddrChangeEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *OnExtAddrChangeEvent) GetExtAddr() uint64 {
	if x != nil {
		return x.ExtAddr
	}
	return 0
}

type SetTitleEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	X        int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y        int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	FontSize int32  `protobuf:"varint,4,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
}

func (x *SetTitleEvent) Reset() {
	*x = SetTitleEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTitleEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTitleEvent) ProtoMessage() {}

func (x *SetTitleEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTitleEvent.ProtoReflect.Descriptor instead.
func (*SetTitleEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{26}
}

func (x *SetTitleEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetTitleEvent) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SetTitleEvent) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SetTitleEvent) GetFontSize() int32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

type SetNodeModeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   int32     `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeMode *NodeMode `protobuf:"bytes,2,opt,name=node_mode,json=nodeMode,proto3" json:"node_mode,omitempty"`
}

func (x *SetNodeModeEvent) Reset() {
	*x = SetNodeModeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNodeModeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNodeModeEvent) ProtoMessage() {}

func (x *SetNodeModeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNodeModeEvent.ProtoReflect.Descriptor instead.
func (*SetNodeModeEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{27}
}

func (x *SetNodeModeEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetNodeModeEvent) GetNodeMode() *NodeMode {
	if x != nil {
		return x.NodeMode
	}
	return nil
}

type SetNetworkInfoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Real          bool   `protobuf:"varint,1,opt,name=real,proto3" json:"real,omitempty"`
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Commit        string `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	NodeId        int32  `protobuf:"varint,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ThreadVersion int32  `protobuf:"varint,5,opt,name=thread_version,json=threadVersion,proto3" json:"thread_version,omitempty"`
}

func (x *SetNetworkInfoEvent) Reset() {
	*x = SetNetworkInfoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNetworkInfoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNetworkInfoEvent) ProtoMessage() {}

func (x *SetNetworkInfoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNetworkInfoEvent.ProtoReflect.Descriptor instead.
func (*SetNetworkInfoEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{28}
}

func (x *SetNetworkInfoEvent) GetReal() bool {
	if x != nil {
		return x.Real
	}
	return false
}

func (x *SetNetworkInfoEvent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SetNetworkInfoEvent) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *SetNetworkInfoEvent) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SetNetworkInfoEvent) GetThreadVersion() int32 {
	if x != nil {
		return x.ThreadVersion
	}
	return 0
}

type NodeEnergy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   int32   `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Disabled float64 `protobuf:"fixed64,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Sleep    float64 `protobuf:"fixed64,3,opt,name=sleep,proto3" json:"sleep,omitempty"`
	Tx       float64 `protobuf:"fixed64,4,opt,name=tx,proto3" json:"tx,omitempty"`
	Rx       float64 `protobuf:"fixed64,5,opt,name=rx,proto3" json:"rx,omitempty"`
}

func (x *NodeEnergy) Reset() {
	*x = NodeEnergy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeEnergy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeEnergy) ProtoMessage() {}

func (x *NodeEnergy) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeEnergy.ProtoReflect.Descriptor instead.
func (*NodeEnergy) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{29}
}

func (x *NodeEnergy) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeEnergy) GetDisabled() float64 {
	if x != nil {
		return x.Disabled
	}
	return 0
}

func (x *NodeEnergy) GetSleep() float64 {
	if x != nil {
		return x.Sleep
	}
	return 0
}

func (x *NodeEnergy) GetTx() float64 {
	if x != nil {
		return x.Tx
	}
	return 0
}

func (x *NodeEnergy) GetRx() float64 {
	if x != nil {
		return x.Rx
	}
	return 0
}

type EnergyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   uint64        `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodesEnergy []*NodeEnergy `protobuf:"bytes,2,rep,name=NodesEnergy,proto3" json:"NodesEnergy,omitempty"`
}

func (x *EnergyEvent) Reset() {
	*x = EnergyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyEvent) ProtoMessage() {}

func (x *EnergyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyEvent.ProtoReflect.Descriptor instead.
func (*EnergyEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{30}
}

func (x *EnergyEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EnergyEvent) GetNodesEnergy() []*NodeEnergy {
	if x != nil {
		return x.NodesEnergy
	}
	return nil
}

type NodeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumNodes      uint32 `protobuf:"varint,1,opt,name=NumNodes,proto3" json:"NumNodes,omitempty"`
	NumLeaders    uint32 `protobuf:"varint,2,opt,name=NumLeaders,proto3" json:"NumLeaders,omitempty"`
	NumPartitions uint32 `protobuf:"varint,3,opt,name=NumPartitions,proto3" json:"NumPartitions,omitempty"`
	NumRouters    uint32 `protobuf:"varint,4,opt,name=NumRouters,proto3" json:"NumRouters,omitempty"`
	NumEndDevices uint32 `protobuf:"varint,5,opt,name=NumEndDevices,proto3" json:"NumEndDevices,omitempty"`
	NumDetached   uint32 `protobuf:"varint,6,opt,name=NumDetached,proto3" json:"NumDetached,omitempty"`
	NumDisabled   uint32 `protobuf:"varint,7,opt,name=NumDisabled,proto3" json:"NumDisabled,omitempty"`
	NumSleepy     uint32 `protobuf:"varint,8,opt,name=NumSleepy,proto3" json:"NumSleepy,omitempty"`
	NumFailed     uint32 `protobuf:"varint,9,opt,name=NumFailed,proto3" json:"NumFailed,omitempty"`
}

func (x *NodeStats) Reset() {
	*x = NodeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStats) ProtoMessage() {}

func (x *NodeStats) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStats.ProtoReflect.Descriptor instead.
func (*NodeStats) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{31}
}

func (x *NodeStats) GetNumNodes() uint32 {
	if x != nil {
		return x.NumNodes
	}
	return 0
}

func (x *NodeStats) GetNumLeaders() uint32 {
	if x != nil {
		return x.NumLeaders
	}
	return 0
}

func (x *NodeStats) GetNumPartitions() uint32 {
	if x != nil {
		return x.NumPartitions
	}
	return 0
}

func (x *NodeStats) GetNumRouters() uint32 {
	if x != nil {
		return x.NumRouters
	}
	return 0
}

func (x *NodeStats) GetNumEndDevices() uint32 {
	if x != nil {
		return x.NumEndDevices
	}
	return 0
}

func (x *NodeStats) GetNumDetached() uint32 {
	if x != nil {
		return x.NumDetached
	}
	return 0
}

func (x *NodeStats) GetNumDisabled() uint32 {
	if x != nil {
		return x.NumDisabled
	}
	return 0
}

func (x *NodeStats) GetNumSleepy() uint32 {
	if x != nil {
		return x.NumSleepy
	}
	return 0
}

func (x *NodeStats) GetNumFailed() uint32 {
	if x != nil {
		return x.NumFailed
	}
	return 0
}

type NodeStatsInfoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64     `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NodeStats *NodeStats `protobuf:"bytes,2,opt,name=node_stats,json=nodeStats,proto3" json:"node_stats,omitempty"`
}

func (x *NodeStatsInfoEvent) Reset() {
	*x = NodeStatsInfoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatsInfoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatsInfoEvent) ProtoMessage() {}

func (x *NodeStatsInfoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatsInfoEvent.ProtoReflect.Descriptor instead.
func (*NodeStatsInfoEvent) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{32}
}

func (x *NodeStatsInfoEvent) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NodeStatsInfoEvent) GetNodeStats() *NodeStats {
	if x != nil {
		return x.NodeStats
	}
	return nil
}

type CommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{33}
}

func (x *CommandRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type CommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []string `protobuf:"bytes,1,rep,name=output,proto3" json:"output,omitempty"`
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{34}
}

func (x *CommandResponse) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

type ReplayEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64          `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Event     *VisualizeEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ReplayEntry) Reset() {
	*x = ReplayEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayEntry) ProtoMessage() {}

func (x *ReplayEntry) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayEntry.ProtoReflect.Descriptor instead.
func (*ReplayEntry) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{35}
}

func (x *ReplayEntry) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReplayEntry) GetEvent() *VisualizeEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_visualize_grpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_visualize_grpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_visualize_grpc_proto_rawDescGZIP(), []int{36}
}

var File_visualize_grpc_proto protoreflect.FileDescriptor

var file_visualize_grpc_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x22, 0x12, 0x0a, 0x10, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0f, 0x0a,
	0x0d, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12,
	0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xbe, 0x0e, 0x0a, 0x0e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x65,
	0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x6c, 0x6f, 0x63, 0x31, 0x36, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x6c, 0x6f, 0x63, 0x31, 0x36, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6c, 0x6f, 0x63, 0x31, 0x36, 0x12, 0x49, 0x0a, 0x0d, 0x73,
	0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76,
	0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x12, 0x5f,
	0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x0c, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x6e, 0x4e,
	0x6f, 0x64, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x4f, 0x0a, 0x0f, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76,
	0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x12, 0x52, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6d, 0x6f, 0x5f, 0x6c, 0x65,
	0x67, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53,
	0x68, 0x6f, 0x77, 0x44, 0x65, 0x6d, 0x6f, 0x4c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6d, 0x6f, 0x4c, 0x65,
	0x67, 0x65, 0x6e, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x52,
	0x0a, 0x10, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x5b, 0x0a, 0x13, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x4f, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x58, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x76,
	0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x3f,
	0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x41, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x12, 0x56, 0x0a, 0x12, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x45, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x73, 0x65,
	0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x73,
	0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a, 0x0f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x07, 0x6d, 0x76, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd2, 0x02, 0x0a,
	0x10, 0x4d, 0x73, 0x67, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x73, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x76, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x76, 0x69, 0x73, 0x54, 0x72,
	0x75, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x64, 0x62, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x44, 0x62, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x49, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0x4c, 0x0a, 0x16,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0x48, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x22, 0x4b, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x65, 0x78, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0x45, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x47, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x77, 0x44, 0x65, 0x6d, 0x6f, 0x4c, 0x65, 0x67, 0x65, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79,
	0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x22, 0x60,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4f, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x55, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0f, 0x4f, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x4f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x22, 0x2a, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x8f,
	0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x7a, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xbd, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a,
	0x0f, 0x72, 0x78, 0x5f, 0x6f, 0x6e, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x78, 0x4f, 0x6e, 0x57, 0x68, 0x65, 0x6e,
	0x49, 0x64, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x45, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x6c, 0x6f, 0x63, 0x31,
	0x36, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6c, 0x6f, 0x63, 0x31, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x6c, 0x6f, 0x63, 0x31, 0x36, 0x22, 0x4a, 0x0a, 0x14, 0x4f, 0x6e, 0x45, 0x78, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x78, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x22, 0x5e, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x65, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x6c, 0x65, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x6c, 0x65, 0x65,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x74,
	0x78, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72,
	0x78, 0x22, 0x6c, 0x0a, 0x0b, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f,
	0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x22,
	0xb3, 0x02, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x4e, 0x75, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x4e, 0x75, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x75, 0x6d,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4e,
	0x75, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x75, 0x6d,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x4e, 0x75, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x4e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4e, 0x75, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x4e, 0x75, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4e, 0x75, 0x6d, 0x45, 0x6e, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4e, 0x75, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x75, 0x6d, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4e, 0x75,
	0x6d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x75, 0x6d,
	0x53, 0x6c, 0x65, 0x65, 0x70, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4e, 0x75,
	0x6d, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x75, 0x6d, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4e, 0x75, 0x6d, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x6f, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3b, 0x0a, 0x0a, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x64, 0x0a,
	0x0b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x56, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x98, 0x01, 0x0a,
	0x0c, 0x4f, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x4f, 0x54, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x54,
	0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x54,
	0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x54, 0x5f, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x54, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x4f, 0x54, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4c,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x04, 0x32, 0xe4, 0x02, 0x0a, 0x14, 0x56, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x55, 0x0a, 0x09, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x2e,
	0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x21, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x12, 0x20, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x69, 0x73, 0x75,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x56, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x42, 0x2f,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2f, 0x6f, 0x74, 0x2d, 0x6e, 0x73, 0x2f, 0x76, 0x69,
	0x73, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_visualize_grpc_proto_rawDescOnce sync.Once
	file_visualize_grpc_proto_rawDescData = file_visualize_grpc_proto_rawDesc
)

func file_visualize_grpc_proto_rawDescGZIP() []byte {
	file_visualize_grpc_proto_rawDescOnce.Do(func() {
		file_visualize_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_visualize_grpc_proto_rawDescData)
	})
	return file_visualize_grpc_proto_rawDescData
}

var file_visualize_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_visualize_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_visualize_grpc_proto_goTypes = []interface{}{
	(OtDeviceRole)(0),               // 0: visualize_grpc_pb.OtDeviceRole
	(*VisualizeRequest)(nil),        // 1: visualize_grpc_pb.VisualizeRequest
	(*EnergyRequest)(nil),           // 2: visualize_grpc_pb.EnergyRequest
	(*NodeStatsRequest)(nil),        // 3: visualize_grpc_pb.NodeStatsRequest
	(*VisualizeEvent)(nil),          // 4: visualize_grpc_pb.VisualizeEvent
	(*SendEvent)(nil),               // 5: visualize_grpc_pb.SendEvent
	(*MsgVisualizeInfo)(nil),        // 6: visualize_grpc_pb.MsgVisualizeInfo
	(*AddRouterTableEvent)(nil),     // 7: visualize_grpc_pb.AddRouterTableEvent
	(*RemoveRouterTableEvent)(nil),  // 8: visualize_grpc_pb.RemoveRouterTableEvent
	(*AddChildTableEvent)(nil),      // 9: visualize_grpc_pb.AddChildTableEvent
	(*RemoveChildTableEvent)(nil),   // 10: visualize_grpc_pb.RemoveChildTableEvent
	(*SetSpeedEvent)(nil),           // 11: visualize_grpc_pb.SetSpeedEvent
	(*HeartbeatEvent)(nil),          // 12: visualize_grpc_pb.HeartbeatEvent
	(*AdvanceTimeEvent)(nil),        // 13: visualize_grpc_pb.AdvanceTimeEvent
	(*SetParentEvent)(nil),          // 14: visualize_grpc_pb.SetParentEvent
	(*CountDownEvent)(nil),          // 15: visualize_grpc_pb.CountDownEvent
	(*ShowDemoLegendEvent)(nil),     // 16: visualize_grpc_pb.ShowDemoLegendEvent
	(*SetNodePosEvent)(nil),         // 17: visualize_grpc_pb.SetNodePosEvent
	(*SetNodeRoleEvent)(nil),        // 18: visualize_grpc_pb.SetNodeRoleEvent
	(*SetNodePartitionIdEvent)(nil), // 19: visualize_grpc_pb.SetNodePartitionIdEvent
	(*OnNodeFailEvent)(nil),         // 20: visualize_grpc_pb.OnNodeFailEvent
	(*OnNodeRecoverEvent)(nil),      // 21: visualize_grpc_pb.OnNodeRecoverEvent
	(*DeleteNodeEvent)(nil),         // 22: visualize_grpc_pb.DeleteNodeEvent
	(*AddNodeEvent)(nil),            // 23: visualize_grpc_pb.AddNodeEvent
	(*NodeMode)(nil),                // 24: visualize_grpc_pb.NodeMode
	(*SetNodeRloc16Event)(nil),      // 25: visualize_grpc_pb.SetNodeRloc16Event
	(*OnExtAddrChangeEvent)(nil),    // 26: visualize_grpc_pb.OnExtAddrChangeEvent
	(*SetTitleEvent)(nil),           // 27: visualize_grpc_pb.SetTitleEvent
	(*SetNodeModeEvent)(nil),        // 28: visualize_grpc_pb.SetNodeModeEvent
	(*SetNetworkInfoEvent)(nil),     // 29: visualize_grpc_pb.SetNetworkInfoEvent
	(*NodeEnergy)(nil),              // 30: visualize_grpc_pb.NodeEnergy
	(*EnergyEvent)(nil),             // 31: visualize_grpc_pb.EnergyEvent
	(*NodeStats)(nil),               // 32: visualize_grpc_pb.NodeStats
	(*NodeStatsInfoEvent)(nil),      // 33: visualize_grpc_pb.NodeStatsInfoEvent
	(*CommandRequest)(nil),          // 34: visualize_grpc_pb.CommandRequest
	(*CommandResponse)(nil),         // 35: visualize_grpc_pb.CommandResponse
	(*ReplayEntry)(nil),             // 36: visualize_grpc_pb.ReplayEntry
	(*Empty)(nil),                   // 37: visualize_grpc_pb.Empty
}
var file_visualize_grpc_proto_depIdxs = []int32{
	23, // 0: visualize_grpc_pb.VisualizeEvent.add_node:type_name -> visualize_grpc_pb.AddNodeEvent
	22, // 1: visualize_grpc_pb.VisualizeEvent.delete_node:type_name -> visualize_grpc_pb.DeleteNodeEvent
	25, // 2: visualize_grpc_pb.VisualizeEvent.set_node_rloc16:type_name -> visualize_grpc_pb.SetNodeRloc16Event
	18, // 3: visualize_grpc_pb.VisualizeEvent.set_node_role:type_name -> visualize_grpc_pb.SetNodeRoleEvent
	17, // 4: visualize_grpc_pb.VisualizeEvent.set_node_pos:type_name -> visualize_grpc_pb.SetNodePosEvent
	19, // 5: visualize_grpc_pb.VisualizeEvent.set_node_partition_id:type_name -> visualize_grpc_pb.SetNodePartitionIdEvent
	20, // 6: visualize_grpc_pb.VisualizeEvent.on_node_fail:type_name -> visualize_grpc_pb.OnNodeFailEvent
	21, // 7: visualize_grpc_pb.VisualizeEvent.on_node_recover:type_name -> visualize_grpc_pb.OnNodeRecoverEvent
	14, // 8: visualize_grpc_pb.VisualizeEvent.set_parent:type_name -> visualize_grpc_pb.SetParentEvent
	15, // 9: visualize_grpc_pb.VisualizeEvent.count_down:type_name -> visualize_grpc_pb.CountDownEvent
	16, // 10: visualize_grpc_pb.VisualizeEvent.show_demo_legend:type_name -> visualize_grpc_pb.ShowDemoLegendEvent
	13, // 11: visualize_grpc_pb.VisualizeEvent.advance_time:type_name -> visualize_grpc_pb.AdvanceTimeEvent
	7,  // 12: visualize_grpc_pb.VisualizeEvent.add_router_table:type_name -> visualize_grpc_pb.AddRouterTableEvent
	8,  // 13: visualize_grpc_pb.VisualizeEvent.remove_router_table:type_name -> visualize_grpc_pb.RemoveRouterTableEvent
	9,  // 14: visualize_grpc_pb.VisualizeEvent.add_child_table:type_name -> visualize_grpc_pb.AddChildTableEvent
	10, // 15: visualize_grpc_pb.VisualizeEvent.remove_child_table:type_name -> visualize_grpc_pb.RemoveChildTableEvent
	5,  // 16: visualize_grpc_pb.VisualizeEvent.send:type_name -> visualize_grpc_pb.SendEvent
	11, // 17: visualize_grpc_pb.VisualizeEvent.set_speed:type_name -> visualize_grpc_pb.SetSpeedEvent
	12, // 18: visualize_grpc_pb.VisualizeEvent.heartbeat:type_name -> visualize_grpc_pb.HeartbeatEvent
	26, // 19: visualize_grpc_pb.VisualizeEvent.on_ext_addr_change:type_name -> visualize_grpc_pb.OnExtAddrChangeEvent
	27, // 20: visualize_grpc_pb.VisualizeEvent.set_title:type_name -> visualize_grpc_pb.SetTitleEvent
	28, // 21: visualize_grpc_pb.VisualizeEvent.set_node_mode:type_name -> visualize_grpc_pb.SetNodeModeEvent
	29, // 22: visualize_grpc_pb.VisualizeEvent.set_network_info:type_name -> visualize_grpc_pb.SetNetworkInfoEvent
	33, // 23: visualize_grpc_pb.VisualizeEvent.node_stats_info:type_name -> visualize_grpc_pb.NodeStatsInfoEvent
	6,  // 24: visualize_grpc_pb.SendEvent.mv_info:type_name -> visualize_grpc_pb.MsgVisualizeInfo
	0,  // 25: visualize_grpc_pb.SetNodeRoleEvent.role:type_name -> visualize_grpc_pb.OtDeviceRole
	24, // 26: visualize_grpc_pb.SetNodeModeEvent.node_mode:type_name -> visualize_grpc_pb.NodeMode
	30, // 27: visualize_grpc_pb.EnergyEvent.NodesEnergy:type_name -> visualize_grpc_pb.NodeEnergy
	32, // 28: visualize_grpc_pb.NodeStatsInfoEvent.node_stats:type_name -> visualize_grpc_pb.NodeStats
	4,  // 29: visualize_grpc_pb.ReplayEntry.event:type_name -> visualize_grpc_pb.VisualizeEvent
	1,  // 30: visualize_grpc_pb.VisualizeGrpcService.Visualize:input_type -> visualize_grpc_pb.VisualizeRequest
	34, // 31: visualize_grpc_pb.VisualizeGrpcService.Command:input_type -> visualize_grpc_pb.CommandRequest
	2,  // 32: visualize_grpc_pb.VisualizeGrpcService.Energy:input_type -> visualize_grpc_pb.EnergyRequest
	3,  // 33: visualize_grpc_pb.VisualizeGrpcService.NodeStats:input_type -> visualize_grpc_pb.NodeStatsRequest
	4,  // 34: visualize_grpc_pb.VisualizeGrpcService.Visualize:output_type -> visualize_grpc_pb.VisualizeEvent
	35, // 35: visualize_grpc_pb.VisualizeGrpcService.Command:output_type -> visualize_grpc_pb.CommandResponse
	31, // 36: visualize_grpc_pb.VisualizeGrpcService.Energy:output_type -> visualize_grpc_pb.EnergyEvent
	4,  // 37: visualize_grpc_pb.VisualizeGrpcService.NodeStats:output_type -> visualize_grpc_pb.VisualizeEvent
	34, // [34:38] is the sub-list for method output_type
	30, // [30:34] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_visualize_grpc_proto_init() }
func file_visualize_grpc_proto_init() {
	if File_visualize_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_visualize_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisualizeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgVisualizeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRouterTableEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRouterTableEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChildTableEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChildTableEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpeedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvanceTimeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetParentEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDownEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowDemoLegendEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNodePosEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNodeRoleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNodePartitionIdEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnNodeFailEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnNodeRecoverEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNodeRloc16Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnExtAddrChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTitleEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNodeModeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNetworkInfoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeEnergy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatsInfoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_visualize_grpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_visualize_grpc_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*VisualizeEvent_AddNode)(nil),
		(*VisualizeEvent_DeleteNode)(nil),
		(*VisualizeEvent_SetNodeRloc16)(nil),
		(*VisualizeEvent_SetNodeRole)(nil),
		(*VisualizeEvent_SetNodePos)(nil),
		(*VisualizeEvent_SetNodePartitionId)(nil),
		(*VisualizeEvent_OnNodeFail)(nil),
		(*VisualizeEvent_OnNodeRecover)(nil),
		(*VisualizeEvent_SetParent)(nil),
		(*VisualizeEvent_CountDown)(nil),
		(*VisualizeEvent_ShowDemoLegend)(nil),
		(*VisualizeEvent_AdvanceTime)(nil),
		(*VisualizeEvent_AddRouterTable)(nil),
		(*VisualizeEvent_RemoveRouterTable)(nil),
		(*VisualizeEvent_AddChildTable)(nil),
		(*VisualizeEvent_RemoveChildTable)(nil),
		(*VisualizeEvent_Send)(nil),
		(*VisualizeEvent_SetSpeed)(nil),
		(*VisualizeEvent_Heartbeat)(nil),
		(*VisualizeEvent_OnExtAddrChange)(nil),
		(*VisualizeEvent_SetTitle)(nil),
		(*VisualizeEvent_SetNodeMode)(nil),
		(*VisualizeEvent_SetNetworkInfo)(nil),
		(*VisualizeEvent_NodeStatsInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_visualize_grpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_visualize_grpc_proto_goTypes,
		DependencyIndexes: file_visualize_grpc_proto_depIdxs,
		EnumInfos:         file_visualize_grpc_proto_enumTypes,
		MessageInfos:      file_visualize_grpc_proto_msgTypes,
	}.Build()
	File_visualize_grpc_proto = out.File
	file_visualize_grpc_proto_rawDesc = nil
	file_visualize_grpc_proto_goTypes = nil
	file_visualize_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VisualizeGrpcServiceClient is the client API for VisualizeGrpcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VisualizeGrpcServiceClient interface {
	Visualize(ctx context.Context, in *VisualizeRequest, opts ...grpc.CallOption) (VisualizeGrpcService_VisualizeClient, error)
	Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error)
	Energy(ctx context.Context, in *EnergyRequest, opts ...grpc.CallOption) (VisualizeGrpcService_EnergyClient, error)
	NodeStats(ctx context.Context, in *NodeStatsRequest, opts ...grpc.CallOption) (VisualizeGrpcService_NodeStatsClient, error)
}

type visualizeGrpcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVisualizeGrpcServiceClient(cc grpc.ClientConnInterface) VisualizeGrpcServiceClient {
	return &visualizeGrpcServiceClient{cc}
}

func (c *visualizeGrpcServiceClient) Visualize(ctx context.Context, in *VisualizeRequest, opts ...grpc.CallOption) (VisualizeGrpcService_VisualizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VisualizeGrpcService_serviceDesc.Streams[0], "/visualize_grpc_pb.VisualizeGrpcService/Visualize", opts...)
	if err != nil {
		return nil, err
	}
	x := &visualizeGrpcServiceVisualizeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VisualizeGrpcService_VisualizeClient interface {
	Recv() (*VisualizeEvent, error)
	grpc.ClientStream
}

type visualizeGrpcServiceVisualizeClient struct {
	grpc.ClientStream
}

func (x *visualizeGrpcServiceVisualizeClient) Recv() (*VisualizeEvent, error) {
	m := new(VisualizeEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *visualizeGrpcServiceClient) Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandResponse, error) {
	out := new(CommandResponse)
	err := c.cc.Invoke(ctx, "/visualize_grpc_pb.VisualizeGrpcService/Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *visualizeGrpcServiceClient) Energy(ctx context.Context, in *EnergyRequest, opts ...grpc.CallOption) (VisualizeGrpcService_EnergyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VisualizeGrpcService_serviceDesc.Streams[1], "/visualize_grpc_pb.VisualizeGrpcService/Energy", opts...)
	if err != nil {
		return nil, err
	}
	x := &visualizeGrpcServiceEnergyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VisualizeGrpcService_EnergyClient interface {
	Recv() (*EnergyEvent, error)
	grpc.ClientStream
}

type visualizeGrpcServiceEnergyClient struct {
	grpc.ClientStream
}

func (x *visualizeGrpcServiceEnergyClient) Recv() (*EnergyEvent, error) {
	m := new(EnergyEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *visualizeGrpcServiceClient) NodeStats(ctx context.Context, in *NodeStatsRequest, opts ...grpc.CallOption) (VisualizeGrpcService_NodeStatsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VisualizeGrpcService_serviceDesc.Streams[2], "/visualize_grpc_pb.VisualizeGrpcService/NodeStats", opts...)
	if err != nil {
		return nil, err
	}
	x := &visualizeGrpcServiceNodeStatsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VisualizeGrpcService_NodeStatsClient interface {
	Recv() (*VisualizeEvent, error)
	grpc.ClientStream
}

type visualizeGrpcServiceNodeStatsClient struct {
	grpc.ClientStream
}

func (x *visualizeGrpcServiceNodeStatsClient) Recv() (*VisualizeEvent, error) {
	m := new(VisualizeEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VisualizeGrpcServiceServer is the server API for VisualizeGrpcService service.
type VisualizeGrpcServiceServer interface {
	Visualize(*VisualizeRequest, VisualizeGrpcService_VisualizeServer) error
	Command(context.Context, *CommandRequest) (*CommandResponse, error)
	Energy(*EnergyRequest, VisualizeGrpcService_EnergyServer) error
	NodeStats(*NodeStatsRequest, VisualizeGrpcService_NodeStatsServer) error
}

// UnimplementedVisualizeGrpcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVisualizeGrpcServiceServer struct {
}

func (*UnimplementedVisualizeGrpcServiceServer) Visualize(*VisualizeRequest, VisualizeGrpcService_VisualizeServer) error {
	return status.Errorf(codes.Unimplemented, "method Visualize not implemented")
}
func (*UnimplementedVisualizeGrpcServiceServer) Command(context.Context, *CommandRequest) (*CommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Command not implemented")
}
func (*UnimplementedVisualizeGrpcServiceServer) Energy(*EnergyRequest, VisualizeGrpcService_EnergyServer) error {
	return status.Errorf(codes.Unimplemented, "method Energy not implemented")
}
func (*UnimplementedVisualizeGrpcServiceServer) NodeStats(*NodeStatsRequest, VisualizeGrpcService_NodeStatsServer) error {
	return status.Errorf(codes.Unimplemented, "method NodeStats not implemented")
}

func RegisterVisualizeGrpcServiceServer(s *grpc.Server, srv VisualizeGrpcServiceServer) {
	s.RegisterService(&_VisualizeGrpcService_serviceDesc, srv)
}

func _VisualizeGrpcService_Visualize_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VisualizeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VisualizeGrpcServiceServer).Visualize(m, &visualizeGrpcServiceVisualizeServer{stream})
}

type VisualizeGrpcService_VisualizeServer interface {
	Send(*VisualizeEvent) error
	grpc.ServerStream
}

type visualizeGrpcServiceVisualizeServer struct {
	grpc.ServerStream
}

func (x *visualizeGrpcServiceVisualizeServer) Send(m *VisualizeEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _VisualizeGrpcService_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VisualizeGrpcServiceServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/visualize_grpc_pb.VisualizeGrpcService/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VisualizeGrpcServiceServer).Command(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VisualizeGrpcService_Energy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EnergyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VisualizeGrpcServiceServer).Energy(m, &visualizeGrpcServiceEnergyServer{stream})
}

type VisualizeGrpcService_EnergyServer interface {
	Send(*EnergyEvent) error
	grpc.ServerStream
}

type visualizeGrpcServiceEnergyServer struct {
	grpc.ServerStream
}

func (x *visualizeGrpcServiceEnergyServer) Send(m *EnergyEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _VisualizeGrpcService_NodeStats_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NodeStatsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VisualizeGrpcServiceServer).NodeStats(m, &visualizeGrpcServiceNodeStatsServer{stream})
}

type VisualizeGrpcService_NodeStatsServer interface {
	Send(*VisualizeEvent) error
	grpc.ServerStream
}

type visualizeGrpcServiceNodeStatsServer struct {
	grpc.ServerStream
}

func (x *visualizeGrpcServiceNodeStatsServer) Send(m *VisualizeEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _VisualizeGrpcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "visualize_grpc_pb.VisualizeGrpcService",
	HandlerType: (*VisualizeGrpcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Command",
			Handler:    _VisualizeGrpcService_Command_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Visualize",
			Handler:       _VisualizeGrpcService_Visualize_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Energy",
			Handler:       _VisualizeGrpcService_Energy_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "NodeStats",
			Handler:       _VisualizeGrpcService_NodeStats_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "visualize_grpc.proto",
}
