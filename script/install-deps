#!/bin/bash
# Copyright (c) 2020-2025, The OTNS Authors.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# Installs OTNS dependencies/packages and is called by 'test'.

# shellcheck source=script/common.sh
. "$(dirname "$0")"/common.sh

# TODO verify how this is used (interacting with utils.sh)
# shellcheck disable=SC2034
apt_update_once=0

install_packages()
{
    install_package git --apt git --brew git || true
    install_package cmake --apt cmake --brew cmake || true
    install_package g++ --apt build-essential --brew gcc || true
    install_package cmake --apt cmake --brew cmake
    install_package ninja --apt ninja-build --brew ninja
    install_package patch --apt patch --brew patch
    install_package wget --apt wget --brew wget || true
    install_package unzip --apt unzip --brew unzip || true
    install_package python3 --apt python3 --brew python3 || true
    # On MacOS (Darwin), no venv brew package exists - not needed. Use dummy name.
    install_package virtualenv --apt python3-venv --brew python3 || true
}

install_grpcwebproxy()
{
    if ! installed grpcwebproxy; then
        if [[ $Darwin == 1 ]]; then
            wget https://github.com/improbable-eng/grpc-web/releases/download/v0.12.0/grpcwebproxy-v0.12.0-osx-x86_64.zip -O /tmp/grpcwebproxy.zip && cd /tmp/ && unzip grpcwebproxy.zip && mv dist/grpcwebproxy* "$GOPATH"/bin/grpcwebproxy
        else
            ARCH=$(uname -m)
            TARGET="linux-x86_64"
            DIR="dist"
            if [[ $ARCH == "aarch64" || $ARCH == "arm64" ]]; then
                TARGET="arm64"
                DIR="."
            fi
            wget https://github.com/improbable-eng/grpc-web/releases/download/v0.12.0/grpcwebproxy-v0.12.0-${TARGET}.zip -O /tmp/grpcwebproxy.zip && cd /tmp/ && unzip grpcwebproxy.zip && mv $DIR/grpcwebproxy-* "$GOPATH"/bin/grpcwebproxy
        fi
        cd -
        echo "grpcwebproxy installed: $(command -v grpcwebproxy)"
    else
        echo "grpcwebproxy found: $(command -v grpcwebproxy)"
    fi
}

install_python_libs()
{
    activate_python_venv
    python3 -m pip install setuptools wheel yapf
}

main()
{
    install_packages
    install_grpcwebproxy
    install_python_libs
}

main
