#!/bin/bash
#
#  Copyright (c) 2022-2024, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euxo pipefail

# shellcheck source=/dev/null
. "$(dirname "$0")"/../../script/utils.sh

OTRFSIM_SRCDIR="$(pwd)"
OT_DIR=${OT_DIR:-../openthread}
OT_DIR=$(realpathf "${OT_DIR}")
OT_CMAKE_NINJA_TARGET=${OT_CMAKE_NINJA_TARGET-}
readonly OTRFSIM_SRCDIR
readonly OT_DIR

# OpenThread options that are always added to build first. They can be overridden on the command line.
# Specific build scripts for OT versions can and will override these options (partially).
OT_OPTIONS=(
    "-DCMAKE_BUILD_TYPE=Debug"
    "-DOT_PLATFORM=external"
    "-DOT_FULL_LOGS=ON"
    "-DOT_VENDOR_NAME=OpenThread.io"
    "-DOT_VENDOR_SW_VERSION=2.0.0"
    "-DOT_JOINER=ON"
    "-DOT_COAP=ON"
    "-DOT_COAPS=ON"
    "-DOT_COAP_OBSERVE=ON"
    "-DOT_COAP_BLOCK=ON"
    "-DOT_COMMISSIONER=ON"
    "-DOT_ECDSA=ON"
    "-DOT_NETDIAG_CLIENT=ON"
    "-DOT_MESH_DIAG=ON"
    "-DOT_SERVICE=ON"
    "-DOT_MLE_MAX_CHILDREN=10"
)
readonly OT_OPTIONS

build()
{
    local nodetype="${OTNS_NODE_TYPE:-custom}"
    local builddir="${OT_CMAKE_BUILD_DIR:-build/${nodetype}}"

    mkdir -p "${builddir}"
    cd "${builddir}"

    local old_ot_dir=""
    if [[ -f OT_DIR.txt ]]; then
        old_ot_dir=$(cat OT_DIR.txt)
    fi
    if [[ ${OT_DIR} != "${old_ot_dir}" ]]; then
        echo "Detected different OT version build into existing build dir: cleaning build dir."
        rm -rf ../"${builddir}"/*
        rm -rf ../"${builddir}"/.ninja*
    fi
    echo "${OT_DIR}" >OT_DIR.txt

    export OT_CMAKE_BUILD_DIR="${builddir}"
    export OTNS_NODE_TYPE="${nodetype}"
    cmake -GNinja -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DOT_COMPILE_WARNING_AS_ERROR=ON "$@" "${OTRFSIM_SRCDIR}"
    if [[ -z ${OT_CMAKE_NINJA_TARGET// /} ]]; then
        ninja
    else
        IFS=' ' read -r -a OT_CMAKE_NINJA_TARGET <<<"${OT_CMAKE_NINJA_TARGET}"
        ninja "${OT_CMAKE_NINJA_TARGET[@]}"
    fi

    cd "${OTRFSIM_SRCDIR}"
}

main()
{
    local options=()
    options+=("${OT_OPTIONS[@]}" "$@")
    build "${options[@]}"
}

main "$@"
